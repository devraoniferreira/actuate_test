{"name": "Retrieve original invalid URL", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\dev\\python\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"D:\\dev\\python\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\shortener_steps.py\", line 55, in step_verify_original_url\n    assert context.page.get_original_url() == \"invalid short url\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given the user is on the URL shortener page", "status": "passed", "start": 1738220663229, "stop": 1738220664807}, {"name": "When the user enters a shortened URL \"zzzz\"", "status": "passed", "start": 1738220664808, "stop": 1738220664919}, {"name": "And clicks the \"Get original\" button", "status": "passed", "start": 1738220664919, "stop": 1738220664959}, {"name": "Then error message \"invalid short url\" should be displayed", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\dev\\python\\Lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"D:\\dev\\python\\Lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\shortener_steps.py\", line 55, in step_verify_original_url\n    assert context.page.get_original_url() == \"invalid short url\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1738220664959, "stop": 1738220664974}], "start": 1738220663229, "stop": 1738220664975, "uuid": "5486b342-a0f7-49ed-b97b-3c96fa5a662c", "historyId": "5dcc09fe94bc11e47c7dfb8d210f593f", "fullName": "URL Shortener: Retrieve original invalid URL", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "URL Shortener"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}